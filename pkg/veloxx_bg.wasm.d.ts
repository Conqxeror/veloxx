/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_wasmdataframe_free: (a: number, b: number) => void;
export const wasmdataframe_new: (a: any) => [number, number, number];
export const wasmdataframe_rowCount: (a: number) => number;
export const wasmdataframe_columnCount: (a: number) => number;
export const wasmdataframe_columnNames: (a: number) => [number, number];
export const wasmdataframe_getColumn: (a: number, b: number, c: number) => any;
export const wasmdataframe_filter: (a: number, b: number, c: number) => [number, number, number];
export const wasmdataframe_selectColumns: (a: number, b: number, c: number) => [number, number, number];
export const wasmdataframe_dropColumns: (a: number, b: number, c: number) => [number, number, number];
export const wasmdataframe_renameColumn: (a: number, b: number, c: number, d: number, e: number) => [number, number, number];
export const wasmdataframe_dropNulls: (a: number, b: number, c: number) => [number, number, number];
export const wasmdataframe_fillNulls: (a: number, b: number) => [number, number, number];
export const wasmdataframe_fromCsv: (a: number, b: number) => [number, number, number];
export const wasmdataframe_fromJson: (a: number, b: number) => [number, number, number];
export const wasmdataframe_toCsv: (a: number, b: number, c: number) => [number, number];
export const wasmdataframe_join: (a: number, b: number, c: number, d: number, e: number) => [number, number, number];
export const wasmdataframe_groupBy: (a: number, b: number, c: number) => [number, number, number];
export const wasmdataframe_withColumn: (a: number, b: number, c: number, d: number) => [number, number, number];
export const wasmdataframe_describe: (a: number) => [number, number, number];
export const wasmdataframe_correlation: (a: number, b: number, c: number, d: number, e: number) => [number, number, number];
export const wasmdataframe_covariance: (a: number, b: number, c: number, d: number, e: number) => [number, number, number];
export const wasmdataframe_append: (a: number, b: number) => [number, number, number];
export const wasmdataframe_sort: (a: number, b: number, c: number, d: number) => [number, number, number];
export const __wbg_wasmvalue_free: (a: number, b: number) => void;
export const wasmvalue_new: (a: any) => [number, number, number];
export const wasmvalue_to_js_value: (a: number) => any;
export const __wbg_wasmgroupeddataframe_free: (a: number, b: number) => void;
export const wasmgroupeddataframe_agg: (a: number, b: number, c: number) => [number, number, number];
export const __wbg_wasmexpr_free: (a: number, b: number) => void;
export const wasmexpr_column: (a: number, b: number) => number;
export const wasmexpr_literal: (a: number) => number;
export const wasmexpr_add: (a: number, b: number) => number;
export const wasmexpr_subtract: (a: number, b: number) => number;
export const wasmexpr_multiply: (a: number, b: number) => number;
export const wasmexpr_divide: (a: number, b: number) => number;
export const wasmexpr_equals: (a: number, b: number) => number;
export const wasmexpr_notEquals: (a: number, b: number) => number;
export const wasmexpr_greaterThan: (a: number, b: number) => number;
export const wasmexpr_lessThan: (a: number, b: number) => number;
export const wasmexpr_greaterThanOrEqual: (a: number, b: number) => number;
export const wasmexpr_lessThanOrEqual: (a: number, b: number) => number;
export const wasmexpr_and: (a: number, b: number) => number;
export const wasmexpr_or: (a: number, b: number) => number;
export const wasmexpr_not: (a: number) => number;
export const __wbindgen_export_0: WebAssembly.Table;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __externref_table_dealloc: (a: number) => void;
export const __externref_drop_slice: (a: number, b: number) => void;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_start: () => void;
